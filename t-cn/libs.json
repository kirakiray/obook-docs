{"docs":{"run-mode":{"webapp-mode":[{"t":"h","c":"網頁應用模式"},{"t":"p","c":"這種方式是 obook 最低成本的使用方式，以下是使用步驟："},{"t":"l","c":"1. 使用最新版的 Chrome 瀏覽器（或支持 File Access API 的其他瀏覽器），打開 obook webapp\n\n2. 在網頁上點擊 \"選擇本地文件夾\" 按鈕，以打開你本地的項目文件夾；"},{"t":"p","c":"現在，你可以點擊鏈接進行預覽，"},{"t":"h","c":"如何打包"},{"t":"p","c":"步驟同上，頁面上點擊 \"下載網站\" 按鈕來下載已經打包好的文檔站。"},{"t":"p","c":"這種方式非常簡便，適合不需要復雜設置和開發知識的用戶。"}],"base-mode":[{"t":"h","c":"標準模式"},{"t":"p","c":"標準模式就是使用本地的靜態服務器，打開準備好的 _preview.html 文件。如果你使用我們推薦的VSCode 編輯器，那麽這個步驟非常簡單："},{"t":"l","c":"1. 打開 LiveServer 擴展頁面，點擊安裝，然後會自動打開VSCode並進行擴展安裝。\n\n2. 將下載的項目解壓縮，使用 VSCode 打開該文件夾。\n\n3. 在VSCode內，右鍵根目錄下的 _preview.html 文件，選擇 open with live server。等待頁面初始化完成後，就能點擊頁面上的鏈接進行預覽。"},{"t":"p","c":"_preview.html 文件就是預覽項目的啟動器。你也可以不使用 LiveServer，使用其他能夠啟動靜態服務器的擴展。"},{"t":"p","c":"這種使用VSCode打開方式的成本最低，編輯器內可以快速啟動靜態服務器。當然，你也可以使用其他的 Markdown 編輯器，如 Typora，開發工具如 Eclipse，甚至是你系統自帶的文本編輯器，只要你覺得方便即可。"},{"t":"p","c":"至於靜態服務器，你可以使用本地搭建的服務器，如 Nginx、Apache 等，只要它能夠用來訪問靜態 HTML 文件就可以。"},{"t":"h","c":"如何打包"},{"t":"p","c":"同上，在服務器模式下打開 _preview.html，點擊 下載網站 就能得到打包好的靜態文件；"},{"t":"p","c":"接下來，你可以直接進入基礎文件章節查看更多信息。"}],"cli-mode":[{"t":"h","c":"命令行模式"},{"t":"p","c":"命令行模式是通過使用 obook 命令來啟動你的項目，需要具備一定的開發知識基礎。以下是使用流程："},{"t":"l","c":"1. 確保系統已經安裝了 Node.js，並確保版本大於等於 18。\n\n2. 在命令行中使用 npm i obook -g 命令將 o-book 安裝到你的本機。\n\n3. 下載下來的項目文件後，確保項目根目錄下的 package.json 文件已經配置了 obook 屬性，如下所示："},0,{"t":"l","c":"4. 在終端中切換到當前項目目錄，使用 obook dev 命令進行實時預覽，"},{"t":"h","c":"如何打包"},{"t":"p","c":"同上模式下，使用 obook build 命令將項目打包到 package.json 上定義的 dist 目錄。"},{"t":"p","c":"接下來，你可以直接進入基礎文件章節查看更多信息。"}]},"base-files":[{"t":"h","c":"基礎文件"},{"t":"p","c":"基礎文件相當於 o-book 啟動的腳手架，需要有這層基底才能進行項目的預覽和打包。它們與你的 Markdown 網站間接相關，打包後的文件不會包含這些基礎文件。如果你不是開發人員，或者不關心腳手架的細節，也可以跳過這章，直接查看項目文件。"},{"t":"p","c":"o-book 最主要的基礎文件有兩個，分別是 sw.js 和 _preview.html。"},{"t":"h","c":"sw.js"},{"t":"p","c":"sw.js 是基礎文件之一，只有一行代碼，內容是引用官方文件進行初始化，不需要過多關注："},0,{"t":"h","c":"_preview.html"},{"t":"p","c":"_preview.html 是項目啟動預覽初始化的文件，主要的代碼如下："},0,{"t":"p","c":"其中，source 引用地址到項目配置文件處，項目文件將在下一章討論。lang 屬性用於設置文檔站默認使用的語言。obook 默認支持多語言，如果不需要多語言支持，只保留一個 source 即可。"},{"t":"p","c":"目前 o-book 官方支持的語言包括："},{"t":"l","c":"- en 英語\n- cn 簡體中文\n- t-cn 繁體中文\n- es 西班牙語"}],"index":[{"t":"h","c":"o-book 2"},{"t":"p","c":"o-book 2 是一個文檔生成工具，它將會是你使用過的最簡單的文檔站生成工具之一。只需一個 HTML 文件，就可以將你編寫的 Markdown 文章生成為功能完善的文檔網站。它基於 ofa.js 開發，使用起來非常簡單；"},{"t":"h","c":"使用前的準備"},{"t":"p","c":"在使用 o-book 之前，你需要掌握 Markdown 的基本語法。另外，你還需要準備一個文本編輯器。我們推薦使用微軟推出的 VSCode，它不僅免費，而且有大量擴展可供選擇，使你的文檔編輯工作更加高效。"},{"t":"h","c":"準備文件"},{"t":"p","c":"在撰寫文檔之前，需要在本地準備好項目的基礎文件。為了方便起見，我們已經為你提供了項目的初始文件，你只需點擊以下鏈接下載並解壓縮到本地即可："},{"t":"p","c":"下載項目文件"},{"t":"p","c":"後面我們會說明一下幾個關鍵文件的含義；"},{"t":"h","c":"運行項目"},{"t":"p","c":"obook官方提供了三種方式運行你的項目，你可以根據需求選擇其中一種方式啟動即可："},{"t":"l","c":"1. 標準模式：使用本地服務器查看 o-book 組件，從而預覽和生成文檔站。\n2. 命令行模式：使用 Node.js 和命令行預覽和生成文檔站。\n3. 網頁應用模式：通過網頁直接選擇本地 Markdown 文件夾進行預覽和生成。"},{"t":"p","c":"標準模式 需要靜態服務器打開下載好的文件；"},{"t":"p","c":"命令行模式 需要有一定前端開發知識基礎，通過 npm 安裝 o-book 模塊，後面就可以通過命令行進行預覽和打包項目；這個模式也可以成為腳本自動化的一部分；"},{"t":"p","c":"網頁應用模式 不需要你有任何開發知識，只需要打開網站，選擇本地文件夾，就能查看和打包你的項目；"}],"project-docs":[{"t":"h","c":"項目文件"},{"t":"p","c":"項目文件是你真正寫文檔的文件，項目目錄結構大致如下："},{"t":"l","c":"- config.json\n- docs\n  - SUMMARY.md\n  - article1.md\n  - article2.md"},{"t":"p","c":"在這個結構中，.md 文件是你實際編寫文檔內容的文件，你只需要按照 Markdown 的格式編寫文檔即可。"},{"t":"h","c":"config.json"},{"t":"p","c":"config.json 是文檔站的配置文件，用於配置頂部的導航以及其他設置。navs 屬性用於配置導航欄，其中 summary 屬性對應下面提到的 SUMMARY.md 文件路徑。你可以配置多個導航選項。"},0,{"t":"h","c":"SUMMARY.md"},{"t":"p","c":"SUMMARY.md 的格式是一個簡單的鏈接列表，鏈接的名字是章節的名字，鏈接的指向是章節文件的路徑，會在文檔站的左側展示。"},{"t":"p","c":"例如當前文檔站的 SUMMARY.md 信息如下："},0,{"t":"p","c":"這些項目文件是構建文檔站的關鍵部分，它們將幫助你組織和展示你的文檔內容。請按照以上結構和格式編寫你的文檔。"}],"add-analysis":[{"t":"h","c":"添加分析代碼"},{"t":"p","c":"如果您需要跟蹤和統計您網站的訪問數據，我們建議您使用 谷歌分析。"},{"t":"p","c":"要添加分析代碼，請按照以下步驟操作："},{"t":"l","c":"1. 使用您的代碼編輯器打開 _preview.html 文件。\n\n2. 在 <book-tool> 標簽中添加一個帶有 inject-head 屬性的 <template> 標簽，並將您的統計代碼放置在模板內，類似如下所示："},0,{"t":"p","c":"一旦您添加了分析代碼，請重新打包項目。分析代碼會插入到所有頁面的頭部，以便您可以輕松跟蹤和分析您網站的訪問數據。"}],"i18n":[{"t":"h","c":"多語言支持"},{"t":"p","c":"您可以通過修改 _preview.html 文件中的 book-tool 組件，在內部添加 source 標簽來增加其他語言的文檔。請注意，其他語言的文檔必須要與原文內容一一對應。"},0,{"t":"p","c":"在上述代碼中，我們使用了 source 標簽來引入不同語言版本的文檔配置文件。同時，lang 屬性用於指定文檔所使用的語言。目前支持的語言選項如下："},{"t":"l","c":"- 英語 (en)\n- 簡體中文 (cn)\n- 繁體中文 (t-cn)\n- 西班牙語 (es)"},{"t":"p","c":"通過這種方式，您可以輕松為不同語言的用戶提供相應語言版本的網站內容；"}],"normal-pages":[{"t":"h","c":"添加非文檔頁面"},{"t":"p","c":"有時候，您可能需要添加一些不是文檔類型的頁面，比如首頁。在這種情況下，您可以通過編輯 config.json 文件的 pages 屬性來指定非文檔類型的 Markdown 文件的相對地址。"},0,{"t":"p","c":"在上述示例中，我們設置了一個首頁（index.md），這意味著首頁將只包含頂部導航組件，而不會顯示文檔類型頁面的左側文檔導航和右側文章導航。"},{"t":"p","c":"這種方式讓您可以輕松地添加其他類型的頁面，並根據需要進行自定義，而不受文檔頁面結構的限制。"}],"add-footer":[{"t":"h","c":"添加底部內容"},{"t":"p","c":"您可以通過編輯 config.json 文件中的 footer 屬性來定義所有頁面底部顯示的內容。在 footer 屬性中，指定一個相對路徑來引用包含底部內容的 Markdown 文件。"},0,{"t":"p","c":"與 SUMMARY.md 的內容類似，footer.md 文件包含了鏈接列表，每個鏈接都會在頁面的底部顯示。以下是一個示例 footer.md 文件的內容："},0,{"t":"p","c":"在 footer.md 文件中，您還可以添加圖片，它們將顯示為底部的圖標。這樣，您可以輕松為您的文檔站添加自定義底部內容。"}]}}